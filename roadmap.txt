Client Features:
1.  Create, Delete content containers (via: UI & keyboard)
2.  Move, Size,  [[maybe: Rotate
3.  Text Edit (via: Keyboard & UI)
4.  Group (drag on screen to create a new parent for the captured elements) ::container.grouping
5.  Select (drag on screen to select containers) ::container.select
6.  Change Ownership (change parent to grandparent or sibling) ::container.lineage
7.  Style Container  (shape, color, border, etc) 
::container.style [CRUDE]
8   Copy/Paste within presentation and accross presentations ::container.clipboard
------------------------------------------------------------------------------
9  !Link Containers ::container.link [BROKEN & NEEDS PERSISTING MECHANISM]
10 !Collapse (a means of sumarizing a container by making is much smaller and displaying a summary of what it contains) (via: Keyboard, crude) 
::builtin core - Experiental
11 !Display Order Change & ensure persist respects it

12 !Content Insertion (img, video, svg, etc) ::container.content
  => Needs server & client modification to support uploading heavy content straight to server
13  Configure Container: (order, child style, positioning, etc) 
--------------------------------------------

Current Prios:
[BUG]: fix resize to preserve ratio again. Keyboard needs fixin for that
[BUG]: container.action fix remove action
[BUG][MUST-FIX]: Keyaboard sticky keys. Some keys incorrectly are shown as pressed despite them not being pressed
[MUST-HAVE]: Standardize core. have it documented. Add tests
[MUST-HAVE]: standardize all apps to use utils for mouse and keyboard events.
[TODO]: socker.io won't fire items with large payloads in them. Find a solution for large payloads
[TODO]: split container.create to not have the inner organisation interface and create new app container.content.arrange
[BUG]: Lineage component is a bit buggy and can even cause disappearences
[BUG]: Some component causes containers to disappear... not sure which fakin' one... but it's making it unusable
       - Suspicion: it has to do with the fact that mouse allows clicking on parent
[SHOULD-HAVE][CORE] when creating within a parent, or changing parents - have the child conform to parent rules by default 
(e.g. respect parent stylign suggestionts)

[SHOULD-FIX][TEXT_EDITOR]: fix forward deletion
 -> activate text editor only after keyboard event?
 
- [nice to have] Create Aligner
- [nice to have] Minimap
- [nice to have] Collaborators & Follow
- [should have]  Authentication
- [should consider] Consider having local and global permissions. Local don't get propagated to others or persisted, global are persisted and propagated.
- [nice to have] should be allowed to add container actions that trigger only in presentation mode or on preview.

Current purpose:
[OK] Serve as a view controller for my newsstand application. It receives updates in the form of HTML news bits which will get displayed on screen & presisted for later view.
[MEH] Create interactive cards (christmas, new year, birthday, etc)

Next Purpose:
Create Spatial documents / diagrams. E.g. Take DnD notes. Diagram a System

Stretch purpose:
Create 'living' diagrams (that can update themselves with status information)
or even intaractive dashboards?
Don't know for sure yet if this is feasable... (there are existing tools for such things already)


SERVER
----------------------------------------
! properly integrate user authentication & authorization
! add roles and integrate robot (for mfs-news-stand)
! have a landing page showing all presentations (paged maybe?)
 -> ! separate per user

0. Ability to upload HTML and PDF files to the Server 
   - PDF files will be converted to HTML by the Server
   - then sanitized to remove all script forms
0. Uploaded HTML data will be then processed by a headless browser
    :open file
    :connect to prezzo
    :create container for data
    :beam over contents to server (so it gets persisted)

0. Filter out all forms of scripts from beamed html
1. Socket management
2. Persisting presentation to file (DONE)
 2.2 - Load presentations from file
 2.3 - Beam presentations to new joiners (should be done via HTML rather than socket.io events)
---------------------------------------------------------------------
- Roles & Permissions system per prezzo & object 
- Joining & Reloading presentation downloads the generated html file




Server
HTTP Server -------- Users
                        persistence --- Persister (interface)
                                        - FilePersister (impl)
                                        - DbPersister (impl)
                        Authorisation

(IO Server) -------- Presentation Manager (Controller)
                        [] Presentation (Controller)
                            id
                            users
                            persistence   ---- Persister (interface)
                                                - FilePersister (impl)
                                                - SqlitePersister (impl)
                                                - etc

                            permissions   ---- Authorization Engine




From making Don's christmas card:
* change ownership of elements
* change container actions per element
* find out containerIDs
* change permissions on container
* !change draw order of containers!

Most annoying:
containers kept disappearing randomly - setting me back
server persist failed without feedback on screen. e.g. couldn't import beteala.png at all - setting me back
couldn't change display order (had to edit json) - setting me back
couldn't change actions (had to edit json) - setting me back

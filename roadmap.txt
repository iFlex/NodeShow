Client Features:
1.  Create, Delete content containers (via: UI & keyboard)
2.  Move, Size,  [[maybe: Rotate
3.  Text Edit (via: Keyboard & UI)
4.  Group (drag on screen to create a new parent for the captured elements) ::container.grouping
5.  Select (drag on screen to select containers) ::container.select
6.  Change Ownership (change parent to grandparent or sibling) ::container.lineage
7.  Style Container  (shape, color, border, etc) 
::container.style [CRUDE]
8   Copy/Paste within presentation and accross presentations ::container.clipboard
9   Content Insertion (img, video, svg, etc) ::container.content (works for images)
10  Display Order Change
------------------------------------------------------------------------------
11 !Collapse (a means of sumarizing a container by making is much smaller and displaying a summary of what it contains) (via: Keyboard, Crude) 
::builtin core - Experiental
 => Collapsing should be done in layers/stages.
    e.g. content -> layer 1     -> layer 2  -> layer 3      -> layer 4
                    Ample note 1    note 1     note 1/Title    small icon
                    Ample note 2    note 2
                    Ample note 3
        state: tracks at what layer of 'summarisation' the container is at
               if you want to summarise futher, you summarise based on the previous layer. The first layer being the full content of the container.
               
12  !Link Containers ::container.link [BROKEN & NEEDS PERSISTING MECHANISM]
    - create links
    - edit links
    - persist/load/maintain links
13  Configure Container: (order, child style, positioning, etc):: container.configure
    [BUG/NOT_SURE]: findActionableContainer prevents clicking on position locked elements 
--------------------------------------------


Current Prios:
--------------------------------------------
[TODO][CRITICAL]: make LiveBridge & Server communication robust + show feedback to user about containers that haven't been persisted by the server.
    Feedback: items that have failed to persist will have a failed css rule on them with a data-failed property containing the reason
    [NOTE]: socker.io won't fire items with large payloads in them >500kb or so. Large data content will be sent to server as blob and served from a separate folder.
[FIX?]: [CORE] .getPosition to take borders and margins into account. Should it?
[TODO]: implement delete selection - introduced a BUG
[TODO]: implement undo/redo history
[TODO]: Text eitor interface improvements: pick font, size update, prettify
[TODO]: Fix clash between UI input fields and container.clipboard and container.edit.text
[TODO]: Move findActionableAncestor call from mouse() into the relevant components
[TODO]: Revise and make robust Mouse & Keyboard
[TODO]: Work on solid encoding interpretation on content from server
[TODO]: grouper color selection. pick color in a smart way rather than just black
[TODO]: copy/paste style only (via context menu)
[SHOULD-HAVE]: implement user feedback mechanisms: toast, confirm, prompt, alert, info queue + dismiss
[SHOULD-HAVE]: properly organise server code
[NICE-TO-HAVE]: ability to hide/show either div or just div content from other contributors
[TODO]: Text is rendered differently on each device. Sized divs may have overflowing text on different platforms
[BUG]: fix resize to preserve ratio again. Keyboard needs fixin for that
[BUG][MUST-FIX]: Keyboard sticky keys. Some keys incorrectly are shown as pressed despite them not being pressed
[MUST-HAVE]: Standardize core. have it documented. Add tests
[MUST-HAVE]: standardize all apps to use utils for mouse and keyboard events.
[TODO]: split container.create to not have the inner organisation interface and create new app container.content.arrange
[BUG]: Lineage component is a bit buggy and can even cause disappearences
[BUG]: Some component causes containers to disappear... not sure which fakin' one... but it's making it unusable
       - Suspicion: it has to do with the fact that mouse allows clicking on parent
[SHOULD-HAVE][CORE] when creating within a parent, or changing parents - have the child conform to parent rules by default 
(e.g. respect parent stylign suggestionts)
[NICE-TO-HAVE]: clone an existing NodeShow using server side UI
[NICE-TO_HAVE]: resize selection? is it really needed? 
[SHOULD-FIX][TEXT_EDITOR]: fix forward deletion
[BUG]: Main menu can get burried under content. (not critical: reload fixes it)
-----------------------------------------------------------------------
- [must have]  Authentication
- [nice to have] Create Aligner
- [nice to have] Minimap
- [nice to have] Collaborators & Follow
- [should consider] Consider having local and global permissions. Local don't get propagated to others or persisted, global are persisted and propagated.
- [nice to have] should be allowed to add container actions that trigger only in presentation mode or on preview.

Current purpose:
[OK] Serve as a view controller for my newsstand application. It receives updates in the form of HTML news bits which will get displayed on screen & presisted for later view.
[MEH] Create interactive cards (christmas, new year, birthday, etc)

Next Purpose:
Create Spatial documents / diagrams. E.g. Take DnD notes. Diagram a System

Stretch purpose:
Create 'living' diagrams (that can update themselves with status information)
or even intaractive dashboards?
Don't know for sure yet if this is feasable... (there are existing tools for such things already)


SERVER
----------------------------------------
![todo] add roles and integrate robot (for mfs-news-stand)
![todo] properly integrate user authentication & authorization
 ::crude auth integrated in HTTP side
   - integrate AUTH in socket side (enforce)
   - store passwords securely
   - add cookie expiration
   - update cookie expiration with each verify
![todo] ratelimit/user & size limit uploads to server
[todo]0. Ability to upload HTML and PDF files to the Server 
   - PDF files will be converted to HTML by the Server
   - then sanitized to remove all script forms
[todo]0. Uploaded HTML data will be then processed by a headless browser
    :open file
    :connect to prezzo
    :create container for data
    :beam over contents to server (so it gets persisted)

[todo]0. Optimize serving content: e.g. blob, static content, etc. Currently searching for this content folder by folder.
[nice-to-have]: maybe use a framwork for the frontend like Angular. Something that won't be as manual as the vanilla JS in the UI

0. Filter out all forms of scripts from beamed html
1. Socket management
2. Persisting presentation to file (DONE)
 2.2 - Load presentations from file
 2.3 - Beam presentations to new joiners (should be done via HTML rather than socket.io events)
---------------------------------------------------------------------
- Roles & Permissions system per prezzo & object 
- Joining & Reloading presentation downloads the generated html file




Server
HTTP Server -------- Users
                        persistence --- Persister (interface)
                                        - FilePersister (impl)
                                        - DbPersister (impl)
                        Authorisation

(IO Server) -------- Presentation Manager (Controller)
                        [] Presentation (Controller)
                            id
                            users
                            persistence   ---- Persister (interface)
                                                - FilePersister (impl)
                                                - SqlitePersister (impl)
                                                - etc

                            permissions   ---- Authorization Engine




From making Don's christmas card:
* change ownership of elements
* change container actions per element
* find out containerIDs
* change permissions on container
* !change draw order of containers!

Most annoying:
containers kept disappearing randomly - setting me back
server persist failed without feedback on screen. e.g. couldn't import beteala.png at all - setting me back
couldn't change display order (had to edit json) - setting me back
couldn't change actions (had to edit json) - setting me back
